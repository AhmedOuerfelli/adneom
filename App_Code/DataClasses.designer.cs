#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CaFe")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Définitions de méthodes d'extensibilité
  partial void OnCreated();
  partial void InsertMag(Mag instance);
  partial void UpdateMag(Mag instance);
  partial void DeleteMag(Mag instance);
  partial void InsertSucre(Sucre instance);
  partial void UpdateSucre(Sucre instance);
  partial void DeleteSucre(Sucre instance);
  partial void InsertTypeConso(TypeConso instance);
  partial void UpdateTypeConso(TypeConso instance);
  partial void DeleteTypeConso(TypeConso instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CaFeConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Mag> Mag
	{
		get
		{
			return this.GetTable<Mag>();
		}
	}
	
	public System.Data.Linq.Table<Sucre> Sucre
	{
		get
		{
			return this.GetTable<Sucre>();
		}
	}
	
	public System.Data.Linq.Table<TypeConso> TypeConso
	{
		get
		{
			return this.GetTable<TypeConso>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mag")]
public partial class Mag : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdMag;
	
	private System.Nullable<bool> _MagPerso;
	
	private string _LibelleMag;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMagChanging(int value);
    partial void OnIdMagChanged();
    partial void OnMagPersoChanging(System.Nullable<bool> value);
    partial void OnMagPersoChanged();
    partial void OnLibelleMagChanging(string value);
    partial void OnLibelleMagChanged();
    #endregion
	
	public Mag()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMag", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdMag
	{
		get
		{
			return this._IdMag;
		}
		set
		{
			if ((this._IdMag != value))
			{
				this.OnIdMagChanging(value);
				this.SendPropertyChanging();
				this._IdMag = value;
				this.SendPropertyChanged("IdMag");
				this.OnIdMagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagPerso", DbType="Bit")]
	public System.Nullable<bool> MagPerso
	{
		get
		{
			return this._MagPerso;
		}
		set
		{
			if ((this._MagPerso != value))
			{
				this.OnMagPersoChanging(value);
				this.SendPropertyChanging();
				this._MagPerso = value;
				this.SendPropertyChanged("MagPerso");
				this.OnMagPersoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleMag", DbType="NVarChar(50)")]
	public string LibelleMag
	{
		get
		{
			return this._LibelleMag;
		}
		set
		{
			if ((this._LibelleMag != value))
			{
				this.OnLibelleMagChanging(value);
				this.SendPropertyChanging();
				this._LibelleMag = value;
				this.SendPropertyChanged("LibelleMag");
				this.OnLibelleMagChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sucre")]
public partial class Sucre : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdSucre;
	
	private System.Nullable<int> _QT_Sucre;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSucreChanging(int value);
    partial void OnIdSucreChanged();
    partial void OnQT_SucreChanging(System.Nullable<int> value);
    partial void OnQT_SucreChanged();
    #endregion
	
	public Sucre()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdSucre
	{
		get
		{
			return this._IdSucre;
		}
		set
		{
			if ((this._IdSucre != value))
			{
				this.OnIdSucreChanging(value);
				this.SendPropertyChanging();
				this._IdSucre = value;
				this.SendPropertyChanged("IdSucre");
				this.OnIdSucreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QT_Sucre", DbType="Int")]
	public System.Nullable<int> QT_Sucre
	{
		get
		{
			return this._QT_Sucre;
		}
		set
		{
			if ((this._QT_Sucre != value))
			{
				this.OnQT_SucreChanging(value);
				this.SendPropertyChanging();
				this._QT_Sucre = value;
				this.SendPropertyChanged("QT_Sucre");
				this.OnQT_SucreChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeConso")]
public partial class TypeConso : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdTypeConso;
	
	private string _LibelleConso;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeConsoChanging(int value);
    partial void OnIdTypeConsoChanged();
    partial void OnLibelleConsoChanging(string value);
    partial void OnLibelleConsoChanged();
    #endregion
	
	public TypeConso()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeConso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdTypeConso
	{
		get
		{
			return this._IdTypeConso;
		}
		set
		{
			if ((this._IdTypeConso != value))
			{
				this.OnIdTypeConsoChanging(value);
				this.SendPropertyChanging();
				this._IdTypeConso = value;
				this.SendPropertyChanged("IdTypeConso");
				this.OnIdTypeConsoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleConso", DbType="NVarChar(50)")]
	public string LibelleConso
	{
		get
		{
			return this._LibelleConso;
		}
		set
		{
			if ((this._LibelleConso != value))
			{
				this.OnLibelleConsoChanging(value);
				this.SendPropertyChanging();
				this._LibelleConso = value;
				this.SendPropertyChanged("LibelleConso");
				this.OnLibelleConsoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
